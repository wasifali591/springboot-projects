version: '3'

services:
  # Rabbit messaging queue
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=pass
    volumes:
      - rabbitmq_data:/etc/rabbitmq/
      - rabbitmq_data:/var/lib/rabbitmq/
      - rabbitmq_data:/var/log/rabbitmq/
    ports:
      - "5672:5672"
      - "15672:15672"

  # Redis distributed cache
  redis:
    image: redis
    container_name: redis
    environment:
      - REDIS_REPLICATION_MODE= master
      - REDIS_PASSWORD=password
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/redis/data

  # Neo4j graph DB
  neo4j:
    image: neo4j
    container_name: neo4j
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
      - neo4j_data:/logs
      - neo4j_data:/plugins
      - neo4j_data:/import
    environment:
      NEO4J_AUTH: neo4j/pass

  # Mongo noSQL DB
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    restart: unless-stopped

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  # MySQL DB
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: test
      MYSQL_USER: testuser
      MYSQL_PASSWORD: testuser@123
      MYSQL_ROOT_PASSWORD: admin123
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  # Postgres DB
  postgres:
    image: postgres:latest
    networks:
      - backend
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
#      - POSTGRES_DB=testdb
    restart: unless-stopped

  # Postgres admin
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:4.16
    networks:
      - backend
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - ${PGADMIN_PORT:-5050}:80
    restart: unless-stopped

volumes:
  rabbitmq_data: null
  redis_data: null
  neo4j_data: null
  mongo_data: null
  mysql_data: null
  postgres_data: null

networks:
  backend: null
